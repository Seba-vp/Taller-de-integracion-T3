{"version":3,"sources":["componentes/Socket.js","componentes/SocketChat.js","componentes/Chat.js","componentes/Popup.js","componentes/Map.js","componentes/Flights.js","App.js","reportWebVitals.js","index.js"],"names":["socket","io","path","on","console","log","connected","socketChat","Chat","name","useState","message","setMessage","messages","setMessages","useEffect","off","divRef","useRef","current","scrollIntoView","behavior","className","map","e","i","src","alt","class","Date","date","toLocaleTimeString","renderBubble","ref","onSubmit","preventDefault","emit","htmlFor","value","onChange","target","Popup","props","trigger","onClick","setTrigger","children","MapView","positions","flights","planeIcon","L","icon","iconUrl","iconSize","redOptions","color","MapContainer","center","zoom","scrollWheelZoom","TileLayer","attribution","url","p","Marker","position","code","f","origin","destination","Polyline","pathOptions","Flights","flightsList","setFlights","planesPositions","setPlanesPositions","buttonPopup","setButtonPoup","currentPlane","setCurrentPlane","flightsListUpdated","plane","planes2","similar_plane","find","x","indexOf","Map","airline","seats","passengers","age","App","setName","registrado","setRegistrado","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.503aafc5.chunk.js","sourcesContent":["import io from 'socket.io-client';\n\nlet socket = io(\"wss://tarea-3-websocket.2021-1.tallerdeintegracion.cl\", {\n    path: \"/flights/\",\n  });\n\nsocket.on('connect', function() {\n  console.log('check connection', socket.connected);\n});\n\n\nexport default socket;","import io from 'socket.io-client';\n\nlet socketChat = io(\"wss://tarea-3-websocket.2021-1.tallerdeintegracion.cl\", {\n    path: \"/flights/\",\n  });\n\nsocketChat.on('connect', function() {\n  console.log('check connection chat', socketChat.connected);\n});\n\n\nexport default socketChat;","import React, {useState, useEffect , useRef} from 'react';\nimport socket from './Socket';\nimport socketChat from './SocketChat';\nimport '../App.css';\n\n\n\nconst Chat = ({ name }) => {\n\n    const [message, setMessage] = useState(\"\");\n    const [messages, setMessages] = useState([]);\n\n    useEffect(() => {\n        socketChat.on('CHAT', message => {\n            setMessages([...messages, message]);\n        })\n    \n\n        return () => {socketChat.off()}\n    }, [messages]);\n\n    const divRef = useRef(null);\n    useEffect(() =>{\n        divRef.current.scrollIntoView({behavior: 'smooth'});\n    });\n\n    const submit = (e) => {\n        e.preventDefault();\n        socketChat.emit('CHAT', {name, message});\n        setMessage(\"\");\n    };\n\n\n    const renderBubble = (e,i) => {\n        if(e.name=== name){\n            return( \n            <div key={i} className=\"container\">\n                <img src=\"https://image.flaticon.com/icons/png/512/4695/4695105.png\" alt=\"Avatar\"></img>\n                <h3>{e.name}</h3>\n                <p>{e.message}</p>\n                <span class=\"time-right\">{(new Date(e.date)).toLocaleTimeString()}</span>\n            </div>\n            )\n            }\n        else{\n            return(\n            <div key={i} className=\"container darker\">\n                <img src=\"https://image.flaticon.com/icons/png/512/3416/3416530.png\" alt=\"Avatar\" class=\"right\"></img>\n                <h3>{e.name}</h3>\n                <p>{e.message}</p>\n                <span class=\"time-left\">{(new Date(e.date)).toLocaleTimeString()}</span>\n            </div>\n            )\n\n            }\n\n    };\n        \n\n    return (\n        <div className=\"chatBox\">\n            <div className=\"title\">\n                <h1>Chat</h1>\n                <br/>\n            </div>\n\n            <div className=\"chat\">\n                \n                {\n                messages.map((e,i)=>\n                    renderBubble(e,i)\n                )}\n\n                <div ref={divRef}></div>\n            </div>\n\n\n            <form onSubmit={submit}>\n                <label htmlFor=\"\" > </label>\n                <input  value= {message} onChange = {(e) => setMessage(e.target.value)}  className=\"chatInput\"/>\n\n                <button className=\"button\">Enviar</button>\n            </form>\n            \n        </div>\n\n\n    );\n};\n\nexport default Chat","import React from 'react';\nimport '../App.css';\n\nfunction Popup (props) {\n    return(props.trigger) ? (\n        <div className=\"popup\">\n            <div className=\"popup-inner\">\n                <button className=\"close-btn\" onClick={()=>props.setTrigger(false)}>Cerrar</button>\n                {props.children}\n            </div>\n\n        </div>\n    ) : \"\";\n};\n\nexport default Popup","import React from 'react';\nimport { MapContainer, TileLayer, Marker, Popup, Polyline } from 'react-leaflet';\nimport L from 'leaflet';\nimport '../App.css';\n\n\nconst MapView = ({positions, flights})=> {\n\n    const planeIcon = new L.icon({\n        iconUrl: \"https://image.flaticon.com/icons/png/512/2979/2979504.png\",//require(\"../public/plane.png\")\n        iconSize: [40,40],\n    });\n\n    const redOptions = { color: 'red' }\n\n    //console.log(\"DESDE MAP\")\n    //console.log(positions)\n    //console.log(flights)\n    \n    //const [positionList, setPositionList ]= useState(positions)\n    // const [sePuede, setSePuede] = useState(false);\n\n    // useEffect(() => {\n    //     var vuelos = mapData[0] \n    //     if (!vuelos.lenght){\n    //         setSePuede(false) \n    //     }else {\n    //         setSePuede(true) \n    //     };\n    // }, [sePuede]);\n\n\n    return  <MapContainer className=\"leaflet-container\" center={[-33.4489, -70.6693]} zoom={5} scrollWheelZoom={true}>\n    <TileLayer\n      attribution='&copy; <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\n      url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n    />\n    {positions.map((p)=>\n        <Marker position={p.position} icon={planeIcon} >\n            <Popup>\n                Vuelo {p.code}.\n            </Popup>\n        </Marker>\n    )};\n    \n    {\n    \n    \n    flights.map((f) =>\n        <>\n            <Marker position={f.origin} >\n                <Popup>\n                    Origen {f.origin}.\n                </Popup>\n            </Marker>\n            \n\n            <Marker position={f.destination}>\n                <Popup>\n                    Destino {f.destination}\n                </Popup>\n            </Marker>\n\n\n            <Polyline pathOptions={redOptions} positions={[f.origin,f.destination]} />\n        </>\n    )\n    };\n    \n  </MapContainer>\n};\n\nexport default MapView\n\n// [33.4489, 70.6693]","import React, {useState, useEffect} from 'react';\nimport socket from './Socket';\nimport '../App.css';\nimport Popup from './Popup';\nimport MapView from './Map';\n\n\n\nconst Flights = () => {\n\n    const [flightsList, setFlights] = useState([]);\n    const [planesPositions, setPlanesPositions] = useState([]);\n\n    const [buttonPopup, setButtonPoup] = useState(false);\n    const [currentPlane, setCurrentPlane] = useState([]);\n\n\n \n    // FLIGHTS LIST\n    useEffect(() => {\n        //const interval = setInterval(() => {\n\n            socket.emit('FLIGHTS');\n            socket.on('FLIGHTS', flightsListUpdated => {\n                setFlights(flightsListUpdated);\n            });\n            \n            socket.on('POSITION', plane => {\n                var planes2 = planesPositions\n                var similar_plane = planes2.find(x => x.code === plane.code)\n    \n                if (typeof(similar_plane) !== \"undefined\"){\n                    \n                    planes2[planes2.indexOf(similar_plane)] = plane;\n                    setPlanesPositions(planes2);\n    \n                }else {\n                    setPlanesPositions([...planesPositions, plane]);\n                    }          \n            });\n        //}, 1000);\n            \n        return () => {socket.off()}\n    }, [flightsList, planesPositions]);\n\n    //console.log(\"DESDE FLIGHT\")\n    //console.log(flightsList)\n\n\n    return (\n        <div className=\"flights\">\n            <div className=\"title\">\n                <h1>Vuelos</h1>\n            </div>\n            \n            <div className=\"map-container\">\n\n     \n            \n            <MapView \n                positions ={planesPositions}\n                flights = {flightsList}\n             />\n            \n            \n            </div>\n\n\n\n            <div className=\"flightsList\">\n\n                <div className=\"title\">\n                    <h1>Informacion de los Vuelos</h1>\n                </div>\n\n                <div className=\"card-container\">\n                    \n                    {flightsList.map((e,i)=> \n                    <div key={i} className=\"card\">\n                        <div><h3>Codigo: {e.code}</h3></div>\n                        <div><p>Aerolinea: {e.airline}</p></div>\n                        <div><p>Origen: {e.origin}</p></div> \n                        <div><p>Destino: {e.destination}</p></div> \n                        <div><p>Avión: {e.plane}</p></div>\n                        <div><p>Asientos: {e.seats}        <button onClick={()=> {setButtonPoup(true); setCurrentPlane(e.passengers)}}>Ver pasajeros</button></p></div>\n                      \n\n                    </div>\n                    \n                    )}\n            \n                </div>\n            </div>\n\n\n            <Popup trigger={buttonPopup} setTrigger={setButtonPoup}>\n            <h3>Pasajeros</h3>\n            <div className=\"passenger-list\">\n            {currentPlane.map((e,i)=>\n                <div key={i} className=\"passenger\">\n                    <div>{e.name}   {e.age}</div>\n                </div>\n            )}\n            </div>\n            </Popup>\n\n        </div>\n\n\n    );\n};\n\nexport default Flights\n\n\n/*\n       {planesPositions.map((e,i)=> \n                    <div key={i} >\n                        <div>{e.code}</div>\n                        <div>{e.position}</div>\n                    </div>        \n             )}\n*/","import './App.css';\nimport React, { useState }from 'react';\nimport socket from './componentes/Socket';\nimport Chat from './componentes/Chat';\nimport Flights from './componentes/Flights';\n\n\n\n\nfunction App() {\n\n  const [name, setName ] = useState(\"\");\n\n  const [registrado, setRegistrado] = useState(false);\n\n  const registrar = (e) => {\n    e.preventDefault();\n    if(name !== \"\"){\n      setRegistrado(true);\n    }\n  \n  }\n  return (\n    <main>\n      <div className=\"App\">\n      \n        <div className='leftBox'>\n          <Flights />\n        </div>\n\n        <div className='rightBox'>\n          {\n            !registrado &&\n\n            <div className=\"login\">\n            <form onSubmit={registrar}>\n              <label htmlFor=\"\"></label>\n              <h1>Nickname:</h1>\n              <br/>\n              <input value = {name} onChange = {e => setName(e.target.value)}  className=\"input\"/>\n              <br/>\n              <br/>\n              <button className=\"inputButton\">Chatear</button>\n            </form>\n            </div>\n          }\n          {\n            registrado &&\n\n            <Chat name ={name}/>\n          }\n        </div>\n      </div>\n    </main>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}